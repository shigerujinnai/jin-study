@startuml
mix_actor 申込ユーザ


'left to right direction

'hide circle
'hide method


package 入退会 {

    class 入会手続きサービス{
        会員管理
        クレジットカード管理
        入会するユーザ情報

        入会手続きを実行する(入会するユーザ情報)
    }

    class 退会手続きサービス{
        会員管理
        クレジットカード管理
        退会するユーザ情報

        退会手続きを実行する(退会するユーザ情報)
    }

    class 入会するユーザ情報{
        氏名
        氏名かな
        性別
        郵便番号
        住所
        電話番号
        昼間連絡先
        希望するメールアドレス
        コース情報
        クレジットカード番号
        クレジットカード有効期限
        クレジットカードセキュリティコード

        クレジットカード審査情報を生成する()
        入会審査情報を生成する()
    }

    class 退会するユーザ情報{
        会員ID
    }

    入会手続きサービス -> 入会するユーザ情報
    退会手続きサービス -> 退会するユーザ情報

}
package 会員情報{
    class ユーザID{
        発行されたユーザID
    }

    class 会員管理{
         会員情報Repository
         ユーザ情報Repository

        入会審査する()
        入会する()
        退会する()
    }

    class ユーザ情報{
        ユーザID
        氏名
        氏名かな
        性別
        郵便番号
        住所
        電話番号
        昼間連絡先

        大人ですか()
    }

    class 会員情報{
        ユーザID
        メールアドレス
        会員ID
        会員パスワード
        コース情報
        会員状態
    }

    class 入会審査情報{
        氏名
        氏名かな
        生年月日
    }

    enum コース情報{
        ベーシック
        ニコニコ
    }


    interface 会員情報Repository{
        会員を登録する()
        ユーザIDを検索する(会員ID)
        ユーザIDを検索する(入会審査情報)
        会員情報を更新する()
    }

    interface ユーザ情報Repository{
        ユーザを登録する
        ユーザを検索する
    }

    enum 会員状態{
        入会申請中
        入会中
        退会申請中
        退会中
    }

    会員管理 -> 会員情報Repository
    会員管理 -> ユーザ情報Repository
    ユーザ情報 --> ユーザID

    会員情報 -> 会員情報Repository
    会員情報 -> 会員状態
    ユーザ情報 -> ユーザ情報Repository

}

'    package 会員ID発番システム{
'        class ユーザID発番管理{
'            ユーザID発番Repository
'
'            ユーザIDを発行する()
'        }
'
'        class ユーザID{
'            発行されたユーザID
'        }
'
'        interface ユーザID発番Repository{
'        }
'        ユーザID発番管理 -> ユーザID発番Repository
' 入会手続きサービス --> ユーザID発番管理
'    }

入会するユーザ情報 -> 入会審査情報

入会するユーザ情報 --> クレジットカード審査情報


package クレジットカード {

    class クレジットカード管理{
        クレジットカードRepository

        審査する(クレジットカード審査情報)
        検索する(クレジットカード番号)
        登録する(クレジットカード情報)
    }


    class クレジットカード情報{
        ユーザID
        カード番号
        カード有効期限
        カードセキュリティコード

        有効期限は過ぎていないか()
    }

    interface クレジットカードRepository{
        クレジットカードを登録する()
        クレジットカードを検索する()

    }

    class クレジットカード審査情報{
        カード番号
        カード有効期限
        カードセキュリティコード
    }

    クレジットカード情報 -> クレジットカードRepository
    クレジットカード管理 -> クレジットカードRepository
    クレジットカード管理 -> クレジットカード情報
    クレジットカード管理 -> クレジットカード審査情報
    クレジットカード情報 --> ユーザID

}

class 登録情報{
    クレジットカード
    個人情報
    希望するメールアドレス
}



 申込ユーザ -r-> 登録情報
 申込ユーザ --> 入会手続きサービス
 申込ユーザ --> 退会手続きサービス

 入会手続きサービス --> クレジットカード管理
 入会手続きサービス --> 会員管理


 退会手続きサービス -> 会員管理
 退会手続きサービス -> クレジットカード管理



 会員情報 -> コース情報
' クレジットカード -> クレジットカード審査情報

@enduml
